---
import '../styles/global.css'
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Geist:wght@100;200;300;400;500;600;700;800;900&family=Geist+Mono:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
		<title>BrainRoad Labs</title>
	</head>
	<body>
		<!-- Splash Screen -->
		<div id="br_splash" class="br_splash">
			<div class="br_splash_content">BR</div>
		</div>
		<div class="gradient-bg">
			<svg xmlns="http://www.w3.org/2000/svg">
				<defs>
					<filter id="goo">
						<feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
						<feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8" result="goo" />
						<feBlend in="SourceGraphic" in2="goo" />
					</filter>
				</defs>
			</svg>
			<div class="gradients-container">
				<div class="g1"></div>
				<div class="g2"></div>
				<div class="g3"></div>
				<div class="g4"></div>
				<div class="g5"></div>
				<div class="interactive"></div>
			</div>
		</div>
		<div class="content-wrapper min-h-screen p-[10px]">
			<slot />
		</div>
		<script src="../scripts/index.js"></script>
		
		<!-- TODO: remove -->
		<div class="fixed bottom-5 right-5 flex gap-2 z-[9999]">
			<button id="decrementOrder" class="bg-white p-2 rounded-full shadow-md hover:bg-gray-100">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
					<path d="m18 15-6-6-6 6"/>
				</svg>
			</button>
			<button id="incrementOrder" class="bg-white p-2 rounded-full shadow-md hover:bg-gray-100">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
					<path d="m6 9 6 6 6-6"/>
				</svg>
			</button>
		</div>
		
		<script is:inline>
			// TODO: remove
			window.addEventListener('load', () => {
				console.log("Adding button handlers...");
				
				const decrementBtn = document.getElementById('decrementOrder');
				const incrementBtn = document.getElementById('incrementOrder');
				
				if (!decrementBtn || !incrementBtn) {
					console.error("Buttons not found!");
					return;
				}
				
				console.log("Buttons found, adding click handlers");
				
				decrementBtn.onclick = function() {
					console.log("Decrement clicked");
					const containers = document.querySelectorAll('.br_container');
					containers.forEach(container => {
						// Get current order (as string or number)
						let order = container.style.getPropertyValue('--order');
						
						// If empty, try to get from data-order attribute
						if (!order) {
							order = container.getAttribute('data-order') || '0';
						}
						
						// Convert to number
						let currentOrder = parseInt(order);
						
						// Skip zero when decrementing
						let newOrder;
						if (currentOrder === 1) {
							newOrder = -1; // Skip zero when going from 1 to negative
						} else {
							newOrder = currentOrder - 1;
						}
						
						// Update order value
						container.style.setProperty('--order', newOrder);
						
						// Update classes based on order sign
						if (currentOrder > 0 && newOrder < 0) {
							// Going from positive to negative: add above class, remove default
							container.classList.remove('br_container--default-state');
							container.classList.add('br_container--above');
							console.log(`Changed class: default -> above (${currentOrder} -> ${newOrder})`);
						} else if (currentOrder < 0 && newOrder > 0) {
							// Going from negative to positive: add default class, remove above
							container.classList.add('br_container--default-state');
							container.classList.remove('br_container--above');
							console.log(`Changed class: above -> default (${currentOrder} -> ${newOrder})`);
						}
						
						console.log(`Changed order: ${currentOrder} -> ${newOrder}`);
					});
				};
				
				incrementBtn.onclick = function() {
					console.log("Increment clicked");
					const containers = document.querySelectorAll('.br_container');
					containers.forEach(container => {
						// Get current order (as string or number)
						let order = container.style.getPropertyValue('--order');
						
						// If empty, try to get from data-order attribute
						if (!order) {
							order = container.getAttribute('data-order') || '0';
						}
						
						// Convert to number
						let currentOrder = parseInt(order);
						
						// Skip zero when incrementing
						let newOrder;
						if (currentOrder === -1) {
							newOrder = 1; // Skip zero when going from negative to positive
						} else {
							newOrder = currentOrder + 1;
						}
						
						// Update order value
						container.style.setProperty('--order', newOrder);
						
						// Update classes based on order sign
						if (currentOrder > 0 && newOrder < 0) {
							// Going from positive to negative: add above class, remove default
							container.classList.remove('br_container--default-state');
							container.classList.add('br_container--above');
							console.log(`Changed class: default -> above (${currentOrder} -> ${newOrder})`);
						} else if (currentOrder < 0 && newOrder > 0) {
							// Going from negative to positive: add default class, remove above
							container.classList.add('br_container--default-state');
							container.classList.remove('br_container--above');
							console.log(`Changed class: above -> default (${currentOrder} -> ${newOrder})`);
						}
						
						console.log(`Changed order: ${currentOrder} -> ${newOrder}`);
					});
				};
				
				// Make it very clear buttons are active
				decrementBtn.style.cursor = 'pointer';
				incrementBtn.style.cursor = 'pointer';
				
				console.log("Button handlers added");
			});
		</script>
	</body>
</html>
<!--
	CREDITS:
		- Framework: https://astro.build/blog/astro-560/
		- UI Library: https://tailwindcss.com/blog/tailwindcss-v4
		- Dev Tool: https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview
		- Gradient background: https://github.com/baunov/gradients-bg
-->